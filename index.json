[{"authors":null,"categories":null,"content":"I am a final year undergraduate in the Department of Electrical Engineering at Indian Institute of Technology Kanpur. I am broadly interested in the area of high performance computing. At IIT Kanpur, I have worked with Prof. Preeti Malakar. I also spent a summer working with Prof. Denis Trystram at DataMove, INRIA.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://priya2698.github.io/author/priya-mishra/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/priya-mishra/","section":"authors","summary":"I am a final year undergraduate in the Department of Electrical Engineering at Indian Institute of Technology Kanpur. I am broadly interested in the area of high performance computing. At IIT Kanpur, I have worked with Prof.","tags":null,"title":"Priya Mishra","type":"authors"},{"authors":["Priya Mishra","Tushar Agarwal","Preeti Malakar"],"categories":null,"content":"","date":1597622400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597622400,"objectID":"83a62625ff39ef3114d6a20c1c0c0a98","permalink":"https://priya2698.github.io/publication/communication-aware-job-scheduling-using-slurm/","publishdate":"2020-08-17T00:00:00Z","relpermalink":"/publication/communication-aware-job-scheduling-using-slurm/","section":"publication","summary":"Job schedulers play an important role in selecting optimal resources for the submitted jobs. However, most of the current job schedulers do not consider job-specific characteristics such as communication patterns during resource allocation. This often leads to sub-optimal node allocations. We propose three node allocation algorithms that consider the jobâ€™s communication behavior to improve the performance of communication-intensive jobs. We develop our algorithms for tree-based network topologies. The proposed algorithms aim at minimizing network contention by allocating nodes on the least contended switches. We also show that allocating nodes in powers of two leads to a decrease in inter-switch communication for MPI communications, which further improves performance. We implement and evaluate our algorithms using SLURM, a widely-used and well-known job scheduler. We show that the proposed algorithms can reduce the execution times of communication-intensive jobs by 9% (326 hours) on average. The average wait time of jobs is reducedby 31% across three supercomputer job logs.","tags":null,"title":"Communication-aware Job Scheduling using SLURM","type":"publication"},{"authors":["Priya Mishra","Denis Trystram"],"categories":null,"content":"In this work, our aim was to develop an energy disaggregation algorithm for the Qarnot Computing platform. The Qarnot Computing platform uses computing-heaters and utilizes the waste heat from IT computations in their buidings and offices. Through energy disaggregation, our aim was to better understand the energy requirements at different locations of the building and hence, forecast energy needs. Using this information, we can achieve a more efficient job scheduling, for example, scheduling more jobs where there is greater energy requirement. We developed an integer linear programming approach using the information provided by Qarnot Computing about different devices used in their offices and buildings.\n","date":1590969600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590969600,"objectID":"46e7597922d75a977f01cb6c69f73251","permalink":"https://priya2698.github.io/project/energy-disaggregation-using-optimization-problem/","publishdate":"2020-06-01T00:00:00Z","relpermalink":"/project/energy-disaggregation-using-optimization-problem/","section":"project","summary":"In this work, our aim was to develop an energy disaggregation algorithm for the Qarnot Computing platform. The Qarnot Computing platform uses computing-heaters and utilizes the waste heat from IT computations in their buidings and offices.","tags":null,"title":"Energy Disaggregation using optimization problem","type":"project"},{"authors":["Priya Mishra","Denis Trystram"],"categories":null,"content":"In this work, we were interested in studying the impact of job runtime estimates on the performance of non-clairoyant scheduling algorithms. More specifically, we consider the problem of scheduling a set of independent jobs whose processing times are unknown. User runtimes are known to be highly inaccurate. Scheduling policies such as backfilling or shortest job first rely on these estimates to schedule jobs. In this work, we explore the use of machine learning methods to provide better estimates for the exceution times using user history and job characteristics. Instead of estimating the exact value of the job runtime, we consider that the jobs fall in two categories \u0026ndash; short and long jobs and predict the type of each job. We used several classification models as well as simpler schemes such as predicting based on the class of previously submitted jobs alone. We evaluated our models using several full workload traces.\n","date":1588291200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1588291200,"objectID":"95c8102ff5a1330a14ec7165c72ebca5","permalink":"https://priya2698.github.io/project/improving-scheduling-using-job-runtime-predictions/","publishdate":"2020-05-01T00:00:00Z","relpermalink":"/project/improving-scheduling-using-job-runtime-predictions/","section":"project","summary":"In this work, we were interested in studying the impact of job runtime estimates on the performance of non-clairoyant scheduling algorithms. More specifically, we consider the problem of scheduling a set of independent jobs whose processing times are unknown.","tags":null,"title":"Improving Scheduling using Job Runtime Predictions","type":"project"},{"authors":["Priya Mishra","Preeti Malakar"],"categories":null,"content":"In this work, we proposed a novel way of optimizing node-allocation based on underlying algorithms of MPI collectives. MPI collectives occur more prominently than point-to-point in production supercomputing applications. We considered three standard communication patterns - recursive doubling, recursive halving with vector doubling and binomial tree algorithms. These occur in most MPI collectives. We implemented two new node-allocation algorithms, balanced and adaptive1. The balanced algorithm aims at allocating nodes in powers of two on the leaf switches, assuming that the communication pattern is governed by one of the popular parallel algorithms, such as recursive doubling or binomial. Unbalanced allocations have more inter-switch communication. We also propose an adaptive algorithm, that selects the best-the one with the lower communication cost-between balanced and greedy algorithm. These algorithms were implemented using SLURM. The two algorithms reduce execution time by 12% and wait times by 53% on average as compared to the default SLURM algorithm.\n  This work is a part of the paper Communication-aware Job Scheduling using SLURM. Please refer to the paper for additional details. \u0026#x21a9;\u0026#xfe0e;\n   ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577836800,"objectID":"8a936c175f08c435631d87c429ffb762","permalink":"https://priya2698.github.io/project/communication-aware-job-scheduling-using-slurm/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/project/communication-aware-job-scheduling-using-slurm/","section":"project","summary":"In this work, we proposed a novel way of optimizing node-allocation based on underlying algorithms of MPI collectives. MPI collectives occur more prominently than point-to-point in production supercomputing applications. We considered three standard communication patterns - recursive doubling, recursive halving with vector doubling and binomial tree algorithms.","tags":null,"title":"Communication-aware Job Scheduling using SLURM","type":"project"},{"authors":["Priya Mishra","Preeti Malakar"],"categories":null,"content":"Jobs submitted to clusters or supercomputers vary in resource requirements and execution times. Increasingly, they also vary in other characteristics such as communication and I/O behavior. Most of the current job-schedulers do not consider the communication characteristics of a job which leads to sub-optimal allocations. In this work, we developed a greedy node-allocation algorithm1 for tree-based network topology that aims at improving the performance of communication-intensive jobs by allocating resources on the least contended switches. The algorithm uses the information about already running communication-intensive jobs in the cluster. An incoming communication-intensive job is allocated resources on the leaf switches which have maximum free nodes available and minimum communication-intensive jobs already running. This is done to minimize fragmentation and contention. We implemented our algorithm in SLURM, a widely used resource management systems. We obtained a maximum improvement of 78% in the execution times over the default SLURM algorithm.\n  This work is a part of the paper Communication-aware Job Scheduling using SLURM. Please refer to the paper for additional details. \u0026#x21a9;\u0026#xfe0e;\n   ","date":1556668800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556668800,"objectID":"ffb8f2c81683da45bdc94b4c376d5311","permalink":"https://priya2698.github.io/project/optimizing-resource-allocation-on-fat-tree-networks/","publishdate":"2019-05-01T00:00:00Z","relpermalink":"/project/optimizing-resource-allocation-on-fat-tree-networks/","section":"project","summary":"Jobs submitted to clusters or supercomputers vary in resource requirements and execution times. Increasingly, they also vary in other characteristics such as communication and I/O behavior. Most of the current job-schedulers do not consider the communication characteristics of a job which leads to sub-optimal allocations.","tags":null,"title":"Optimizing Resource Allocation on Fat-Tree Networks","type":"project"}]