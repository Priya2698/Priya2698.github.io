<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Denis Trystram | Priya Mishra</title>
    <link>https://priya2698.github.io/author/denis-trystram/</link>
      <atom:link href="https://priya2698.github.io/author/denis-trystram/index.xml" rel="self" type="application/rss+xml" />
    <description>Denis Trystram</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 01 Jun 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://priya2698.github.io/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Denis Trystram</title>
      <link>https://priya2698.github.io/author/denis-trystram/</link>
    </image>
    
    <item>
      <title>Energy Disaggregation</title>
      <link>https://priya2698.github.io/project/energy-disaggregation-using-optimization-problem/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://priya2698.github.io/project/energy-disaggregation-using-optimization-problem/</guid>
      <description>&lt;p&gt;In this work, we collaborated with Qarnot, a green cloud computing company, to design an energy disaggregation algorithm for their smart buildings. The Qarnot Computing platform uses computing-heaters and utilizes the waste heat from IT computations in their buidings and offices. Through energy disaggregation, our aim was to better understand the energy requirements at different locations of the building and hence, forecast energy needs. Using this information, we can achieve a more efficient job scheduling, for example, scheduling more jobs where there is greater energy requirement. We developed an integer linear programming approach using the information provided by Qarnot Computing about different devices used in their offices and buildings.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Improving Scheduling using Job Runtime Predictions</title>
      <link>https://priya2698.github.io/project/improving-scheduling-using-job-runtime-predictions/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      <guid>https://priya2698.github.io/project/improving-scheduling-using-job-runtime-predictions/</guid>
      <description>&lt;p&gt;In this work, we were interested in studying the impact of job runtime estimates on the performance of non-clairoyant scheduling algorithms. More specifically, we consider the problem of scheduling a set of independent jobs whose processing times are unknown. User runtimes are known to be highly inaccurate. Scheduling policies such as backfilling or shortest job first rely on these estimates to schedule jobs. In this work, we explore the use of machine learning methods to provide better estimates for the exceution times using user history and job characteristics. Instead of estimating the exact value of the job runtime, we consider that the jobs fall in two categories &amp;ndash; short and long jobs and predict the type of each job. We used several classification models as well as simpler schemes such as predicting based on the class of previously submitted jobs alone. We evaluated our models using several full workload traces.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
